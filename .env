# ======================
#  SECRETS / BROKER
# ======================
ALPACA_API_KEY_ID=PK3769ZF28HFR2KGN854
ALPACA_API_SECRET_KEY=2k4eSF4h8kSYgwkuPV6GzOCbHg6YWov0aU9UO8du
ALPACA_PAPER=1                  

# ======================
#  GLOBAL / COMMON
# ======================
# Use slash format for Alpaca CRYPTO DATA endpoints.
# If your TRADING API needs unslashed, override per-service in docker-compose.
SYMBOL=BTC/USD
ASSET_CLASS=CRYPTO
PRICE_DEC=2
QTY_DEC=6
TZ=America/New_York

# Strategy (used by backtest & live trader)
# Choose one: ema | zscore
STRATEGY=ema

# ----- EMA Crossover + ADX filter -----
# Fast EMA: ~5–20; Slow EMA: ~50–200. 50/200 is classic golden/death cross.
EMA_FAST=13
EMA_SLOW=150
ADX_LEN=7
ADX_MIN=26
USE_PA_FILTER=1
pa_min_body_frac=0.5

# ----- Z-Score Mean Reversion (long-only fade) -----
# Z = (Price - MA(N)) / std(N). Enters when Z <= -Z_ENTRY and ADX < ADX_SKIP.
Z_N=288
Z_ENTRY=2.4    
Z_EXIT=0.0    
Z_STOP=3.5        
ADX_SKIP=30     
Z_ADX_LEN=14
# RSI filters (entries only; ADX gates entries & reversion exits)
RSI_LEN=14
RSI_LOWER=30
RSI_UPPER=70
TF_MIN=1

# Sizing / caps (shared)
MAX_LEVERAGE=1.0
MIN_NOTIONAL_USD=10             # skip micro rebalances (< $10 notional)

# ======================
#  LIVE TRADER (part2_pseudo_live.py)
# ======================
DEFAULT_TIF=GTC                 # crypto 24x7
LIMIT_AWAY_PCT=0.005            # 0.5% away from mid-price            
BAR_LOOKBACK_MIN=240
# POLL_SEC=5                    # optional override; default is 5
USD_NOTIONAL_CAP=500000
MAX_QTY_PER_TRADE=99999999
CANCEL_AFTER_SEC=300
DRY_RUN=0                       # 1=log only; set 0 to actually trade
CANCEL_ON_FLIP=1

# ======================
#  BACKTEST (part1_backtest.py)
# ======================
# START=2024-01-01T00:00:00Z    # optional ISO8601; omit to use DURATION_DAYS
# END=2024-03-01T00:00:00Z      # optional
DURATION_DAYS=365
TF_MIN=5
INITIAL_CASH=100000
FEE_BPS=0.1                     # 0.10% per notional
SLIPPAGE_BPS=0.02               # 0.02% per side

# ======================
#  DATA GUARD (part3_data_guard.py) — crypto-friendly
# ======================
LOOKBACK_MIN=120                # smaller window avoids inflated gap %
GAP_TOL_MIN=10                  # allow up to 10 consecutive missing minutes
GAP_RECENT_MIN=60               # only error if long gap is in last 60m
GAP_PCT_WARN=10                 # warn if >10% of minutes missing
GAP_PCT_FAIL=20                 # error if >20% missing
TRADE_STALE_SEC=1800            # latest trade can be up to 20m old
BARS_FRESH_SEC=180              # bars considered fresh within 3m
SPREAD_BPS_CAP=50               # 0.50% max spread
JUMP_WARN_BPS=300               # 3%
JUMP_FAIL_BPS=1500              # 15%
ONE_SHOT=0
STRICT=0
# POLL_SEC=30                   # optional override; default is 30

# ======================
#  ORDER LISTENER (part3_order_listener.py)
# ======================
BACKFILL_HOURS=24
SAFETY_OVERLAP_SEC=300
SINK_JSONL=1
SINK_CSV=0
COST_RATE_BPS=10                # used if broker fees aren’t provided

# ======================
#  RISK WORKER (part3_risk_worker.py)
# ======================
VAR_WL=1440                     # minutes of 1-min bars (1 day)
VAR_CONF=0.95                   # one-sided
MAX_VAR_PCT=0.20                # VaR as % of equity
MAX_EXPOSURE_USD=0              # 0=disabled
MAX_DRAWDOWN_PCT=0.30
ENFORCE=1                       # 1=flatten on breach
CANCEL_OPEN_BEFORE_FLATTEN=1
VAR_REFRESH_SEC=60
# POLL_SEC=10                   # optional override; default is 10
# Reuses COST_RATE_BPS, PRICE_DEC, QTY_DEC

# ======================
#  DATABASE (used by components that persist data)
# ======================
# Recommended single DSN when running with docker-compose (host = "db")
DB_DSN=postgresql://postgres:postgres@db:5432/trading

# Or provide parts (only used if DB_DSN is empty)
DB_HOST=db
DB_PORT=5432
DB_USER=postgres
DB_PASSWORD=postgres
DB_NAME=trading

# ======================
#  LOGGING (optional)
# ======================
# LOG_LEVEL=INFO

# ======================
#  NOTES
# ======================
# If your trading endpoints require unslashed symbols (e.g., BTCUSD),
# override per service in docker-compose.yml:
#   live_trader:
#     environment:
#       SYMBOL: "BTCUSD"
# while keeping data services (backtest, data_guard, risk_worker) on "BTC/USD".